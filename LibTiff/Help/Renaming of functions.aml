<?xml version="1.0" encoding="utf-8"?>
<topic id="10524b34-596d-4865-a6bc-9b4eecbee300" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <section address="Main">
      <content>
        <para>TIFFGetA -> <codeEntityReference>M:BitMiracle.LibTiff.Classic.Tiff.GetA(System.Int32)</codeEntityReference></para>
        <para>TIFFGetB -> <codeEntityReference>M:BitMiracle.LibTiff.Classic.Tiff.GetB(System.Int32)</codeEntityReference></para>
        <para>TIFFGetG -> <codeEntityReference>M:BitMiracle.LibTiff.Classic.Tiff.GetG(System.Int32)</codeEntityReference></para>
        <para>TIFFGetR -> <codeEntityReference>M:BitMiracle.LibTiff.Classic.Tiff.GetR(System.Int32)</codeEntityReference></para>
        
        <para></para>
        
        <para>TIFF.tif_cleanup -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.Cleanup</codeEntityReference></para>
        <para>TIFF.tif_close -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.Close</codeEntityReference></para>
        <para>TIFF.tif_decoderow -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.DecodeRow(System.Byte[],System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_decodestrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.DecodeStrip(System.Byte[],System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_decodetile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.DecodeTile(System.Byte[],System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_defstripsize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.DefStripSize(System.Int32)</codeEntityReference></para>
        <para>TIFF.tif_deftilesize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.DefTileSize(System.Int32@,System.Int32@)</codeEntityReference></para>
        <para>TIFF.tif_encoderow -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.EncodeRow(System.Byte[],System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_encodestrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.EncodeStrip(System.Byte[],System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_encodetile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.EncodeTile(System.Byte[],System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_postencode -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.PostEncode</codeEntityReference></para>
        <para>TIFF.tif_predecode -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.PreDecode(System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_preencode -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.PreEncode(System.Int16)</codeEntityReference></para>
        <para>TIFF.tif_seek -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.Seek(System.Int32)</codeEntityReference></para>
        <para>TIFF.tif_setupdecode -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.SetupDecode</codeEntityReference></para>
        <para>TIFF.tif_setupencode -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffCodec.SetupEncode</codeEntityReference></para>
        
        <para></para>
        
        <para>TIFFTagMethods.printdir -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffTagMethods.PrintDir(BitMiracle.LibTiff.Classic.Tiff,System.IO.Stream,BitMiracle.LibTiff.Classic.TiffPrintFlags)</codeEntityReference></para>
        <para>TIFFTagMethods.vgetfield -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffTagMethods.GetField(BitMiracle.LibTiff.Classic.Tiff,BitMiracle.LibTiff.Classic.TiffTag)</codeEntityReference></para>
        <para>TIFFTagMethods.vsetfield -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.TiffTagMethods.SetField(BitMiracle.LibTiff.Classic.Tiff,BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.FieldValue[])</codeEntityReference></para>
        
        <para></para>

        <para>_TIFFmemcmp -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Compare(System.Int16[],System.Int16[],System.Int32)</codeEntityReference>
        (for some types, write us if you need another overload.)
        </para>
        <para>_TIFFmemcpy -> no longer exists</para>
        <para>_TIFFmemset -> no longer exists</para>
        <para>_TIFFrealloc -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Realloc(System.Byte[],System.Int32,System.Int32)</codeEntityReference>
        (for some types, write us if you need another overload.)
        </para>
        
        <para></para>
        
        <para>TIFFAccessTagMethods -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetTagMethods</codeEntityReference>
          (Also added <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetTagMethods(BitMiracle.LibTiff.Classic.TiffTagMethods)</codeEntityReference>
          in order to retain original abilities TIFFAccessTagMethods)
		</para>
        <para>TIFFCheckTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CheckTile(System.Int32,System.Int32,System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFFCheckpointDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CheckpointDirectory</codeEntityReference></para>
        <para>TIFFCleanup -> no longer exists</para>
        <para>TIFFClientOpen -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ClientOpen(System.String,System.String,System.Object,BitMiracle.LibTiff.Classic.TiffStream)</codeEntityReference></para>
        <para>TIFFClientdata -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Clientdata</codeEntityReference></para>
        <para>TIFFClose -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Dispose</codeEntityReference></para>
        <para>TIFFComputeStrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ComputeStrip(System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFFComputeTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ComputeTile(System.Int32,System.Int32,System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFFCreateDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CreateDirectory</codeEntityReference></para>
        <para>TIFFCurrentDirOffset -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CurrentDirOffset</codeEntityReference></para>
        <para>TIFFCurrentDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CurrentDirectory</codeEntityReference></para>
        <para>TIFFCurrentRow -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CurrentRow</codeEntityReference></para>
        <para>TIFFCurrentStrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CurrentStrip</codeEntityReference></para>
        <para>TIFFCurrentTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.CurrentTile</codeEntityReference></para>
        <para>TIFFDataWidth -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.DataWidth(BitMiracle.LibTiff.Classic.TiffType)</codeEntityReference></para>
        <para>TIFFDefaultStripSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.DefaultStripSize(System.Int32)</codeEntityReference></para>
        <para>TIFFDefaultTileSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.DefaultTileSize(System.Int32@,System.Int32@)</codeEntityReference></para>
        <para>TIFFError -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Error(System.String,System.String,System.Object[])</codeEntityReference>
          (also added overloaded method 
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Error(BitMiracle.LibTiff.Classic.Tiff,System.String,System.String,System.Object[])</codeEntityReference>
          that accepts <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.Tiff</codeEntityReference>
          class instance as first parameter. Please use that overloaded method)
        </para>
        <para>TIFFErrorExt -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ErrorExt(System.Object,System.String,System.String,System.Object[])</codeEntityReference>
        (also added overloaded method
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ErrorExt(BitMiracle.LibTiff.Classic.Tiff,System.Object,System.String,System.String,System.Object[])</codeEntityReference>
        that accepts <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.Tiff</codeEntityReference> 
        class instance as first parameter. Please use that overloaded method)
        </para>
        <para>TIFFExtendProc -> <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.Tiff.TiffExtendProc</codeEntityReference></para>
        <para>TIFFFdOpen -> no longer exists (please use 
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)</codeEntityReference>)
        </para>
        <para>TIFFFieldWithName -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FieldWithName(System.String)</codeEntityReference></para>
        <para>TIFFFieldWithTag -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FieldWithTag(BitMiracle.LibTiff.Classic.TiffTag)</codeEntityReference></para>
        <para>TIFFFileName -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FileName</codeEntityReference></para>
        <para>TIFFFileno -> no longer exists</para>
        <para>TIFFFindCODEC -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FindCodec(BitMiracle.LibTiff.Classic.Compression)</codeEntityReference></para>
        <para>TIFFFindFieldInfo -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FindFieldInfo(BitMiracle.LibTiff.Classic.TiffTag,BitMiracle.LibTiff.Classic.TiffType)</codeEntityReference></para>
        <para>TIFFFindFieldInfoByName -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FindFieldInfoByName(System.String,BitMiracle.LibTiff.Classic.TiffType)</codeEntityReference></para>
        <para>TIFFFlush -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Flush</codeEntityReference></para>
        <para>TIFFFlushData -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FlushData</codeEntityReference></para>
        <para>TIFFFreeDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.FreeDirectory</codeEntityReference></para>
        <para>TIFFGetBitRevTable -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetBitRevTable(System.Boolean)</codeEntityReference></para>
        <para>TIFFGetClientInfo -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetClientInfo(System.String)</codeEntityReference></para>
        <para>TIFFGetCloseProc -> no longer exists (please use
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetStream</codeEntityReference>)
        </para>
        <para>TIFFGetConfiguredCODECs -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetConfiguredCodecs</codeEntityReference></para>
        <para>TIFFGetField -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetField(BitMiracle.LibTiff.Classic.TiffTag)</codeEntityReference></para>
        <para>TIFFGetFieldDefaulted -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetFieldDefaulted(BitMiracle.LibTiff.Classic.TiffTag)</codeEntityReference></para>
        <para>TIFFGetMapFileProc -> no longer exists (please use 
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetStream</codeEntityReference>)
        </para>
        <para>TIFFGetMode -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetMode</codeEntityReference></para>
        <para>TIFFGetReadProc -> no longer exists (please use
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetStream</codeEntityReference>)
        </para>
        <para>TIFFGetSeekProc -> no longer exists (please use
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetStream</codeEntityReference>)
        </para>
        <para>TIFFGetSizeProc -> no longer exists (please use
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetStream</codeEntityReference>)
        </para>
        <para>TIFFGetTagListCount -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetTagListCount</codeEntityReference></para>
        <para>TIFFGetTagListEntry -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetTagListEntry(System.Int32)</codeEntityReference></para>
        <para>TIFFGetUnmapFileProc -> no longer exists (please use
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetStream</codeEntityReference>)
        </para>
        <para>TIFFGetVersion -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetVersion</codeEntityReference></para>
        <para>TIFFGetWriteProc -> no longer exists (please use
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetStream</codeEntityReference>)
        </para>
        <para>TIFFIsBigEndian -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.IsBigEndian</codeEntityReference></para>
        <para>TIFFIsByteSwapped -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.IsByteSwapped</codeEntityReference></para>
        <para>TIFFIsCODECConfigured -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.IsCodecConfigured(BitMiracle.LibTiff.Classic.Compression)</codeEntityReference></para>
        <para>TIFFIsMSB2LSB -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.IsMSB2LSB</codeEntityReference></para>
        <para>TIFFIsTiled -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.IsTiled</codeEntityReference></para>
        <para>TIFFIsUpSampled -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.IsUpSampled</codeEntityReference></para>
        <para>TIFFLastDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.LastDirectory</codeEntityReference></para>
        <para>TIFFMergeFieldInfo -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.MergeFieldInfo(BitMiracle.LibTiff.Classic.TiffFieldInfo[],System.Int32)</codeEntityReference></para>
        <para>TIFFNumberOfDirectories -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.NumberOfDirectories</codeEntityReference></para>
        <para>TIFFNumberOfStrips -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.NumberOfStrips</codeEntityReference></para>
        <para>TIFFNumberOfTiles -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.NumberOfTiles</codeEntityReference></para>
        <para>TIFFOpen -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)</codeEntityReference></para>
        <para>TIFFOpenW -> no longer exists (please use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Open(System.String,System.String)</codeEntityReference>)
        </para>
        <para>TIFFPrintDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.PrintDirectory(System.IO.Stream)</codeEntityReference></para>
        <para>TIFFRGBAImageOK -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.RGBAImageOK(System.String@)</codeEntityReference></para>
        <para>TIFFRasterScanlineSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.RasterScanlineSize</codeEntityReference></para>
        <para>TIFFRawStripSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.RawStripSize(System.Int32)</codeEntityReference></para>
        <para>TIFFReadBufferSetup -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadBufferSetup(System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFReadCustomDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadCustomDirectory(System.Int64,BitMiracle.LibTiff.Classic.TiffFieldInfo[],System.Int32)</codeEntityReference></para>
        <para>TIFFReadDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadDirectory</codeEntityReference></para>
        <para>TIFFReadEXIFDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadEXIFDirectory(System.Int64)</codeEntityReference></para>
        <para>TIFFReadEncodedStrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadEncodedStrip(System.Int32,System.Byte[],System.Int32,System.Int32)</codeEntityReference></para>
        <para>TIFFReadEncodedTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadEncodedTile(System.Int32,System.Byte[],System.Int32,System.Int32)</codeEntityReference></para>
        <para>TIFFReadRGBAImage -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImage(System.Int32,System.Int32,System.Int32[])</codeEntityReference></para>
        <para>TIFFReadRGBAImageOriented -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAImageOriented(System.Int32,System.Int32,System.Int32[])</codeEntityReference></para>
        <para>TIFFReadRGBAStrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBAStrip(System.Int32,System.Int32[])</codeEntityReference></para>
        <para>TIFFReadRGBATile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadRGBATile(System.Int32,System.Int32,System.Int32[])</codeEntityReference></para>
        <para>TIFFReadRawStrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadRawStrip(System.Int32,System.Byte[],System.Int32,System.Int32)</codeEntityReference></para>
        <para>TIFFReadRawTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadRawTile(System.Int32,System.Byte[],System.Int32,System.Int32)</codeEntityReference></para>
        <para>TIFFReadScanline -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadScanline(System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFReadTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReadTile(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int16)</codeEntityReference></para>
        <para>TIFFReassignTagToIgnore -> no longer exists</para>
        <para>TIFFRegisterCODEC -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.RegisterCodec(BitMiracle.LibTiff.Classic.TiffCodec)</codeEntityReference></para>
        <para>TIFFReverseBits -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ReverseBits(System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFRewriteDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.RewriteDirectory</codeEntityReference></para>
        <para>TIFFScanlineSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.ScanlineSize</codeEntityReference></para>
        <para>TIFFSetClientInfo -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetClientInfo(System.Object,System.String)</codeEntityReference></para>
        <para>TIFFSetClientdata -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetClientdata(System.Object)</codeEntityReference></para>
        <para>TIFFSetDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetDirectory(System.Int16)</codeEntityReference></para>
        <para>TIFFSetErrorHandler -> no longer exists (use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)</codeEntityReference>
        with instance of class derived from 
        <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.TiffErrorHandler</codeEntityReference>)
        </para>
        <para>TIFFSetErrorHandlerExt -> no longer exists (use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)</codeEntityReference>
        with instance of class derived from 
        <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.TiffErrorHandler</codeEntityReference>)
        </para>
        <para>TIFFSetField -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetField(BitMiracle.LibTiff.Classic.TiffTag,System.Object[])</codeEntityReference></para>
        <para>TIFFSetFileName -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetFileName(System.String)</codeEntityReference></para>
        <para>TIFFSetFileno -> no longer exists</para>
        <para>TIFFSetMode -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetMode(System.Int32)</codeEntityReference></para>
        <para>TIFFSetSubDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetSubDirectory(System.Int64)</codeEntityReference></para>
        <para>TIFFSetTagExtender -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetTagExtender(BitMiracle.LibTiff.Classic.Tiff.TiffExtendProc)</codeEntityReference></para>
        <para>TIFFSetWarningHandler -> no longer exists (use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)</codeEntityReference>
        with instance of class derived from 
        <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.TiffErrorHandler</codeEntityReference>)
        </para>
        <para>TIFFSetWarningHandlerExt -> no longer exists (use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetErrorHandler(BitMiracle.LibTiff.Classic.TiffErrorHandler)</codeEntityReference>
        with instance of class derived from 
        <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.TiffErrorHandler</codeEntityReference>)
        </para>
        <para>TIFFSetWriteOffset -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetWriteOffset(System.Int64)</codeEntityReference></para>
        <para>TIFFSetupStrips -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetupStrips</codeEntityReference></para>
        <para>TIFFStripSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.StripSize</codeEntityReference></para>
        <para>TIFFSwabArrayOfDouble -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfDouble(System.Double[],System.Int32)</codeEntityReference></para>
        <para>TIFFSwabArrayOfLong -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfLong(System.Int32[],System.Int32)</codeEntityReference></para>
        <para>TIFFSwabArrayOfShort -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfShort(System.Int16[],System.Int32)</codeEntityReference></para>
        <para>TIFFSwabArrayOfTriples -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SwabArrayOfTriples(System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFSwabDouble -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SwabDouble(System.Double@)</codeEntityReference></para>
        <para>TIFFSwabLong -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SwabLong(System.Int32@)</codeEntityReference></para>
        <para>TIFFSwabShort -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SwabShort(System.Int16@)</codeEntityReference></para>
        <para>TIFFTileRowSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.TileRowSize</codeEntityReference></para>
        <para>TIFFTileSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.TileSize</codeEntityReference></para>
        <para>TIFFUnRegisterCODEC -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.UnRegisterCodec(BitMiracle.LibTiff.Classic.TiffCodec)</codeEntityReference></para>
        <para>TIFFUnlinkDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.UnlinkDirectory(System.Int16)</codeEntityReference></para>
        <para>TIFFVGetField -> no longer exists (please use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetField(BitMiracle.LibTiff.Classic.TiffTag)</codeEntityReference>)
        </para>
        <para>TIFFVGetFieldDefaulted -> no longer exists (please use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.GetFieldDefaulted(BitMiracle.LibTiff.Classic.TiffTag)</codeEntityReference>)
        </para>
        <para>TIFFVSetField -> no longer exists (please use 
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.SetField(BitMiracle.LibTiff.Classic.TiffTag,System.Object[])</codeEntityReference>)
        </para>
        <para>TIFFVStripSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.VStripSize(System.Int32)</codeEntityReference></para>
        <para>TIFFVTileSize -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.VTileSize(System.Int32)</codeEntityReference></para>
        <para>TIFFWarning -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Warning(System.String,System.String,System.Object[])</codeEntityReference>
        (also added overloaded method
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.Warning(BitMiracle.LibTiff.Classic.Tiff,System.String,System.String,System.Object[])</codeEntityReference>
        that accepts <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.Tiff</codeEntityReference>
        class instance as first parameter. Please use that overloaded method)
        </para>
        <para>TIFFWarningExt -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WarningExt(System.Object,System.String,System.String,System.Object[])</codeEntityReference>
        (also added overloaded method
        <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WarningExt(BitMiracle.LibTiff.Classic.Tiff,System.Object,System.String,System.String,System.Object[])</codeEntityReference>
        that accepts <codeEntityReference qualifyHint="false">T:BitMiracle.LibTiff.Classic.Tiff</codeEntityReference>
        class instance as first parameter. Please use that overloaded method)
        </para>
        <para>TIFFWriteBufferSetup -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteBufferSetup(System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFWriteCheck -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteCheck(System.Int32,System.String)</codeEntityReference></para>
        <para>TIFFWriteCustomDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteCustomDirectory(System.Int64@)</codeEntityReference></para>
        <para>TIFFWriteDirectory -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteDirectory</codeEntityReference></para>
        <para>TIFFWriteEncodedStrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteEncodedStrip(System.Int32,System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFWriteEncodedTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteEncodedTile(System.Int32,System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFWriteRawStrip -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteRawStrip(System.Int32,System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFWriteRawTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteRawTile(System.Int32,System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFWriteScanline -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteScanline(System.Byte[],System.Int32)</codeEntityReference></para>
        <para>TIFFWriteTile -> <codeEntityReference qualifyHint="false" autoUpgrade="true">M:BitMiracle.LibTiff.Classic.Tiff.WriteTile(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int16)</codeEntityReference></para>
      </content>
    </section>
  </developerConceptualDocument>
</topic>